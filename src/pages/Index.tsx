import { Button } from "@/components/ui/button";
import { Card } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import Icon from "@/components/ui/icon";
import { useState, useEffect, useRef } from "react";

interface Message {
  id: number;
  text: string;
  sender: 'user' | 'bot';
  timestamp: Date;
}

export default function Index() {
  const [formData, setFormData] = useState({
    name: "",
    email: "",
    phone: "",
    message: ""
  });

  const [chatMessages, setChatMessages] = useState<Message[]>([
    { id: 1, text: "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç Silvia. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?", sender: 'bot', timestamp: new Date() }
  ]);
  const [userInput, setUserInput] = useState("");
  const [isTyping, setIsTyping] = useState(false);
  const chatEndRef = useRef<HTMLDivElement>(null);

  const botResponses: { [key: string]: string } = {
    "–ø—Ä–∏–≤–µ—Ç": "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –†–∞–¥ –ø–æ–º–æ—á—å –≤–∞–º —Å –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–µ–π –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤.",
    "—Ü–µ–Ω–∞": "–°—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –∑–∞–¥–∞—á–∏. –û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É, –∏ –º—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏–º –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ.",
    "—É—Å–ª—É–≥–∏": "–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º: —Å–æ–∑–¥–∞–Ω–∏–µ —á–∞—Ç-–±–æ—Ç–æ–≤, –≥–æ–ª–æ—Å–æ–≤—ã—Ö –ø–æ–º–æ—â–Ω–∏–∫–æ–≤, –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å–∏—Å—Ç–µ–º –∏ —Å–ª–æ–∂–Ω—ã–µ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏.",
    "–∫–æ–Ω—Ç–∞–∫—Ç": "–ó–≤–æ–Ω–∏—Ç–µ: 8 (800) 101-71-39 –∏–ª–∏ –ø–∏—à–∏—Ç–µ: support@silvla-ai.ru",
    "–≤—Ä–µ–º—è": "–ú—ã —Ä–∞–±–æ—Ç–∞–µ–º –ü–Ω-–ü—Ç —Å 10:00 –¥–æ 19:00",
    "default": "–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –≤–æ–ø—Ä–æ—Å! –î–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É 8 (800) 101-71-39"
  };

  useEffect(() => {
    chatEndRef.current?.scrollIntoView({ behavior: "smooth" });
  }, [chatMessages]);

  const handleSendMessage = () => {
    if (!userInput.trim()) return;

    const newUserMessage: Message = {
      id: chatMessages.length + 1,
      text: userInput,
      sender: 'user',
      timestamp: new Date()
    };

    setChatMessages(prev => [...prev, newUserMessage]);
    setUserInput("");
    setIsTyping(true);

    setTimeout(() => {
      const lowerInput = userInput.toLowerCase();
      let responseText = botResponses.default;

      for (const key in botResponses) {
        if (lowerInput.includes(key)) {
          responseText = botResponses[key];
          break;
        }
      }

      const botMessage: Message = {
        id: chatMessages.length + 2,
        text: responseText,
        sender: 'bot',
        timestamp: new Date()
      };

      setChatMessages(prev => [...prev, botMessage]);
      setIsTyping(false);
    }, 1500);
  };

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    alert(`–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞—è–≤–∫—É, ${formData.name}! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.`);
    setFormData({ name: "", email: "", phone: "", message: "" });
  };

  const services = [
    {
      icon: "Bot",
      title: "–¶–∏—Ñ—Ä–æ–≤—ã–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏",
      description: "–ß–∞—Ç-–±–æ—Ç—ã –∏ AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç—ã –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏ —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏ 24/7. –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞—è–≤–æ–∫, –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏, –ø–æ–¥–¥–µ—Ä–∂–∫–∞.",
      features: ["–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ 1000 –¥–∏–∞–ª–æ–≥–æ–≤/–¥–µ–Ω—å", "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å CRM", "–ú–Ω–æ–≥–æ—è–∑—ã—á–Ω–æ—Å—Ç—å"]
    },
    {
      icon: "Mic",
      title: "–ì–æ–ª–æ—Å–æ–≤—ã–µ –ø–æ–º–æ—â–Ω–∏–∫–∏",
      description: "–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–µ –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–∏—Å—Ç–µ–º—ã –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–≤–æ–Ω–∫–æ–≤, –∑–∞–ø–∏—Å–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É.",
      features: ["–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏", "–ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –≥–æ–ª–æ—Å", "–ó–∞–ø–∏—Å—å —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤"]
    },
    {
      icon: "Network",
      title: "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º",
      description: "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –±–∏–∑–Ω–µ—Å-—Å–∏—Å—Ç–µ–º: CRM, 1–°, —Å–∫–ª–∞–¥, –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –≤ –µ–¥–∏–Ω—É—é —ç–∫–æ—Å–∏—Å—Ç–µ–º—É.",
      features: ["API –ª—é–±–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏", "–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö", "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å"]
    },
    {
      icon: "Workflow",
      title: "–°–ª–æ–∂–Ω—ã–µ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏",
      description: "–†–µ—à–µ–Ω–∏–µ –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –∑–∞–¥–∞—á –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –ø–æ–¥ –≤–∞—à–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è.",
      features: ["–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è", "–ê–Ω–∞–ª–∏–∑ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤", "–ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç—å"]
    }
  ];

  const voiceExamples = [
    {
      title: "–°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤",
      industry: "E-commerce",
      metrics: "500+ –∑–≤–æ–Ω–∫–æ–≤/–¥–µ–Ω—å",
      description: "–ì–æ–ª–æ—Å–æ–≤–æ–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è –ø–µ—Ä–≤–∏—á–Ω–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏, –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–æ–≤ –∏ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏ –æ–±—Ä–∞—â–µ–Ω–∏–π –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º.",
      results: ["–°–Ω–∏–∂–µ–Ω–∏–µ –Ω–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ –Ω–∞ 70%", "–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: 15 —Å–µ–∫—É–Ω–¥", "–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–≤: 92%"]
    },
    {
      title: "–ó–∞–ø–∏—Å—å –Ω–∞ —É—Å–ª—É–≥–∏",
      industry: "–ú–µ–¥–∏—Ü–∏–Ω–∞",
      metrics: "–ö–æ–Ω–≤–µ—Ä—Å–∏—è 85%",
      description: "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–ø–∏—Å—å –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –Ω–∞ –ø—Ä–∏–µ–º —á–µ—Ä–µ–∑ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã–µ –∑–≤–æ–Ω–∫–∏ —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π –≤ –º–µ–¥–∏—Ü–∏–Ω—Å–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É.",
      results: ["–†–∞–±–æ—Ç–∞ 24/7 –±–µ–∑ –≤—ã—Ö–æ–¥–Ω—ã—Ö", "–°–æ–∫—Ä–∞—â–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–ø–∏—Å–∏ –≤ 3 —Ä–∞–∑–∞", "–û—Ç–º–µ–Ω–∞ –∑–∞–ø–∏—Å–∏ –∏ –ø–µ—Ä–µ–Ω–æ—Å –æ–Ω–ª–∞–π–Ω"]
    },
    {
      title: "–ö–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è –ª–∏–¥–æ–≤",
      industry: "B2B –ø—Ä–æ–¥–∞–∂–∏",
      metrics: "–≠–∫–æ–Ω–æ–º–∏—è 40 —á–∞—Å–æ–≤/–Ω–µ–¥–µ–ª—é",
      description: "–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –æ–ø—Ä–æ—Å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤, —Å–µ–≥–º–µ–Ω—Ç–∞—Ü–∏—è –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º –∏ –ø–µ—Ä–µ–¥–∞—á–∞ –≥–æ—Ä—è—á–∏—Ö –ª–∏–¥–æ–≤ –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º.",
      results: ["–£–≤–µ–ª–∏—á–µ–Ω–∏–µ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ –≤ 2.5 —Ä–∞–∑–∞", "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –ª–∏–¥–∞", "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –ë–∏—Ç—Ä–∏–∫—Å24"]
    }
  ];

  const stats = [
    { value: "500+", label: "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤" },
    { value: "24/7", label: "–†–∞–±–æ—Ç–∞ –±–µ–∑ –≤—ã—Ö–æ–¥–Ω—ã—Ö" },
    { value: "85%", label: "–°—Ä–µ–¥–Ω—è—è —ç–∫–æ–Ω–æ–º–∏—è –≤—Ä–µ–º–µ–Ω–∏" },
    { value: "92%", label: "–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–≤" }
  ];

  const benefits = [
    {
      icon: "Zap",
      title: "–ë—ã—Å—Ç—Ä–æ–µ –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ",
      description: "–û—Ç –∏–¥–µ–∏ –¥–æ –∑–∞–ø—É—Å–∫–∞ –∑–∞ 2-4 –Ω–µ–¥–µ–ª–∏"
    },
    {
      icon: "Shield",
      title: "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö",
      description: "–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º 152-–§–ó"
    },
    {
      icon: "TrendingUp",
      title: "–ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç—å",
      description: "–†–µ—à–µ–Ω–∏—è —Ä–∞—Å—Ç—É—Ç –≤–º–µ—Å—Ç–µ —Å –±–∏–∑–Ω–µ—Å–æ–º"
    },
    {
      icon: "HeadphonesIcon",
      title: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7",
      description: "–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏"
    }
  ];

  return (
    <div className="min-h-screen bg-white">
      <header className="fixed top-0 left-0 right-0 bg-white/98 backdrop-blur-md border-b border-gray-200 z-50 shadow-sm">
        <div className="container mx-auto px-4 py-4 flex items-center justify-between">
          <div className="flex items-center gap-2">
            <div className="w-10 h-10 bg-gradient-to-br from-primary to-secondary rounded-lg flex items-center justify-center">
              <Icon name="Sparkles" size={24} className="text-white" />
            </div>
            <div className="text-2xl font-bold bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent">
              SILVIA AI
            </div>
          </div>
          <nav className="hidden md:flex gap-8">
            <a href="#services" className="text-sm font-medium hover:text-primary transition-colors">–£—Å–ª—É–≥–∏</a>
            <a href="#demo" className="text-sm font-medium hover:text-primary transition-colors">–î–µ–º–æ</a>
            <a href="#examples" className="text-sm font-medium hover:text-primary transition-colors">–ö–µ–π—Å—ã</a>
            <a href="#benefits" className="text-sm font-medium hover:text-primary transition-colors">–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞</a>
            <a href="#contacts" className="text-sm font-medium hover:text-primary transition-colors">–ö–æ–Ω—Ç–∞–∫—Ç—ã</a>
          </nav>
          <Button asChild className="hidden md:flex">
            <a href="#contact-form">–°–≤—è–∑–∞—Ç—å—Å—è</a>
          </Button>
          <Button size="icon" variant="outline" className="md:hidden">
            <Icon name="Menu" size={24} />
          </Button>
        </div>
      </header>

      <section className="pt-32 pb-20 px-4 bg-gradient-to-br from-blue-50 via-white to-purple-50">
        <div className="container mx-auto max-w-6xl">
          <div className="text-center animate-fade-in">
            <div className="inline-block mb-4 px-4 py-2 bg-primary/10 rounded-full">
              <span className="text-primary font-semibold text-sm">üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è</span>
            </div>
            <h1 className="text-5xl md:text-7xl font-bold text-secondary mb-6 leading-tight">
              –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è<br />
              <span className="bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent">
                –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤
              </span>
            </h1>
            <p className="text-xl md:text-2xl text-muted-foreground mb-8 max-w-3xl mx-auto leading-relaxed">
              –°–æ–∑–¥–∞–Ω–∏–µ —Ü–∏—Ñ—Ä–æ–≤—ã—Ö –∏ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –∑–∞–¥–∞—á –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞
            </p>
            <div className="flex flex-col sm:flex-row gap-4 justify-center mb-12">
              <Button size="lg" className="text-lg px-8 shadow-lg hover:shadow-xl transition-shadow" asChild>
                <a href="#contact-form">
                  <Icon name="Rocket" size={20} className="mr-2" />
                  –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é
                </a>
              </Button>
              <Button size="lg" variant="outline" className="text-lg px-8" asChild>
                <a href="#demo">
                  <Icon name="PlayCircle" size={20} className="mr-2" />
                  –°–º–æ—Ç—Ä–µ—Ç—å –¥–µ–º–æ
                </a>
              </Button>
            </div>
            <div className="grid grid-cols-2 md:grid-cols-4 gap-6 max-w-4xl mx-auto">
              {stats.map((stat, index) => (
                <div key={index} className="text-center">
                  <div className="text-3xl md:text-4xl font-bold text-primary mb-2">{stat.value}</div>
                  <div className="text-sm text-muted-foreground">{stat.label}</div>
                </div>
              ))}
            </div>
          </div>
        </div>
      </section>

      <section id="services" className="py-20 px-4">
        <div className="container mx-auto max-w-6xl">
          <div className="text-center mb-16">
            <h2 className="text-4xl md:text-5xl font-bold text-secondary mb-4">
              –ù–∞—à–∏ —É—Å–ª—É–≥–∏
            </h2>
            <p className="text-lg text-muted-foreground max-w-2xl mx-auto">
              –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –ª—é–±–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
            </p>
          </div>
          <div className="grid md:grid-cols-2 gap-8">
            {services.map((service, index) => (
              <Card key={index} className="p-8 hover:shadow-2xl transition-all duration-300 hover:-translate-y-1 border-2 hover:border-primary/50">
                <div className="w-16 h-16 bg-gradient-to-br from-primary to-secondary rounded-xl flex items-center justify-center mb-6 shadow-lg">
                  <Icon name={service.icon as any} size={32} className="text-white" />
                </div>
                <h3 className="text-2xl font-bold text-secondary mb-4">{service.title}</h3>
                <p className="text-muted-foreground leading-relaxed mb-4">{service.description}</p>
                <ul className="space-y-2">
                  {service.features.map((feature, idx) => (
                    <li key={idx} className="flex items-center text-sm text-muted-foreground">
                      <Icon name="CheckCircle2" size={16} className="text-primary mr-2 flex-shrink-0" />
                      {feature}
                    </li>
                  ))}
                </ul>
              </Card>
            ))}
          </div>
        </div>
      </section>

      <section id="demo" className="py-20 px-4 bg-gradient-to-br from-gray-50 to-blue-50">
        <div className="container mx-auto max-w-6xl">
          <div className="text-center mb-12">
            <h2 className="text-4xl md:text-5xl font-bold text-secondary mb-4">
              –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
            </h2>
            <p className="text-lg text-muted-foreground">
              –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–æ–±—â–∞—Ç—å—Å—è —Å –Ω–∞—à–∏–º AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å
            </p>
          </div>
          <div className="max-w-3xl mx-auto">
            <Card className="overflow-hidden shadow-2xl border-2">
              <div className="bg-gradient-to-r from-primary to-secondary p-4 text-white flex items-center gap-3">
                <div className="w-10 h-10 bg-white/20 rounded-full flex items-center justify-center">
                  <Icon name="Bot" size={24} />
                </div>
                <div>
                  <div className="font-bold">Silvia AI –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç</div>
                  <div className="text-xs text-white/80 flex items-center gap-1">
                    <div className="w-2 h-2 bg-green-400 rounded-full animate-pulse"></div>
                    –û–Ω–ª–∞–π–Ω
                  </div>
                </div>
              </div>
              <div className="h-[400px] overflow-y-auto p-6 bg-gray-50">
                {chatMessages.map((message) => (
                  <div
                    key={message.id}
                    className={`mb-4 flex ${message.sender === 'user' ? 'justify-end' : 'justify-start'}`}
                  >
                    <div
                      className={`max-w-[70%] rounded-2xl px-4 py-3 ${
                        message.sender === 'user'
                          ? 'bg-primary text-white'
                          : 'bg-white border border-gray-200 text-gray-800'
                      }`}
                    >
                      <p className="text-sm leading-relaxed">{message.text}</p>
                      <p className={`text-xs mt-1 ${message.sender === 'user' ? 'text-white/70' : 'text-gray-400'}`}>
                        {message.timestamp.toLocaleTimeString('ru-RU', { hour: '2-digit', minute: '2-digit' })}
                      </p>
                    </div>
                  </div>
                ))}
                {isTyping && (
                  <div className="flex justify-start mb-4">
                    <div className="bg-white border border-gray-200 rounded-2xl px-4 py-3">
                      <div className="flex gap-1">
                        <div className="w-2 h-2 bg-gray-400 rounded-full animate-bounce" style={{ animationDelay: '0ms' }}></div>
                        <div className="w-2 h-2 bg-gray-400 rounded-full animate-bounce" style={{ animationDelay: '150ms' }}></div>
                        <div className="w-2 h-2 bg-gray-400 rounded-full animate-bounce" style={{ animationDelay: '300ms' }}></div>
                      </div>
                    </div>
                  </div>
                )}
                <div ref={chatEndRef} />
              </div>
              <div className="p-4 bg-white border-t">
                <div className="flex gap-2">
                  <Input
                    placeholder="–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ... (–ø–æ–ø—Ä–æ–±—É–π—Ç–µ: —Ü–µ–Ω–∞, —É—Å–ª—É–≥–∏, –∫–æ–Ω—Ç–∞–∫—Ç)"
                    value={userInput}
                    onChange={(e) => setUserInput(e.target.value)}
                    onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}
                    className="flex-1"
                  />
                  <Button onClick={handleSendMessage} size="icon" className="flex-shrink-0">
                    <Icon name="Send" size={20} />
                  </Button>
                </div>
              </div>
            </Card>
            <div className="text-center mt-6 text-sm text-muted-foreground">
              üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–ø—Ä–æ—Å–∏—Ç—å –ø—Ä–æ —Ü–µ–Ω—É, —É—Å–ª—É–≥–∏ –∏–ª–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã
            </div>
          </div>
        </div>
      </section>

      <section id="examples" className="py-20 px-4">
        <div className="container mx-auto max-w-6xl">
          <div className="text-center mb-12">
            <h2 className="text-4xl md:text-5xl font-bold text-secondary mb-4">
              –ü—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç
            </h2>
            <p className="text-lg text-muted-foreground">
              –ì–æ–ª–æ—Å–æ–≤—ã–µ –ø–æ–º–æ—â–Ω–∏–∫–∏ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –æ—Ç—Ä–∞—Å–ª–µ–π
            </p>
          </div>
          <div className="grid md:grid-cols-3 gap-8">
            {voiceExamples.map((example, index) => (
              <Card key={index} className="p-6 hover:shadow-xl transition-all duration-300 hover:-translate-y-1">
                <div className="flex items-center gap-3 mb-4">
                  <div className="w-12 h-12 bg-gradient-to-br from-primary to-secondary rounded-full flex items-center justify-center shadow-lg">
                    <Icon name="Mic" size={24} className="text-white" />
                  </div>
                  <div className="text-xs font-semibold text-primary bg-primary/10 px-3 py-1 rounded-full">
                    {example.industry}
                  </div>
                </div>
                <h3 className="text-xl font-bold text-secondary mb-2">{example.title}</h3>
                <div className="text-primary font-semibold mb-3 flex items-center gap-2">
                  <Icon name="TrendingUp" size={16} />
                  {example.metrics}
                </div>
                <p className="text-muted-foreground text-sm leading-relaxed mb-4">{example.description}</p>
                <div className="border-t pt-4">
                  <div className="text-xs font-semibold text-secondary mb-2">–†–µ–∑—É–ª—å—Ç–∞—Ç—ã:</div>
                  <ul className="space-y-2">
                    {example.results.map((result, idx) => (
                      <li key={idx} className="flex items-start text-xs text-muted-foreground">
                        <Icon name="Check" size={14} className="text-green-500 mr-2 flex-shrink-0 mt-0.5" />
                        <span>{result}</span>
                      </li>
                    ))}
                  </ul>
                </div>
              </Card>
            ))}
          </div>
        </div>
      </section>

      <section id="benefits" className="py-20 px-4 bg-gradient-to-br from-blue-50 to-purple-50">
        <div className="container mx-auto max-w-6xl">
          <div className="text-center mb-12">
            <h2 className="text-4xl md:text-5xl font-bold text-secondary mb-4">
              –ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç –Ω–∞—Å
            </h2>
            <p className="text-lg text-muted-foreground">
              –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ —Ä–∞–±–æ—Ç—ã —Å Silvia AI
            </p>
          </div>
          <div className="grid md:grid-cols-4 gap-6">
            {benefits.map((benefit, index) => (
              <Card key={index} className="p-6 text-center hover:shadow-lg transition-shadow bg-white">
                <div className="w-14 h-14 bg-gradient-to-br from-primary to-secondary rounded-full flex items-center justify-center mx-auto mb-4">
                  <Icon name={benefit.icon as any} size={28} className="text-white" />
                </div>
                <h3 className="font-bold text-secondary mb-2">{benefit.title}</h3>
                <p className="text-sm text-muted-foreground">{benefit.description}</p>
              </Card>
            ))}
          </div>
        </div>
      </section>

      <section id="contacts" className="py-20 px-4">
        <div className="container mx-auto max-w-6xl">
          <h2 className="text-4xl md:text-5xl font-bold text-center text-secondary mb-16">
            –ö–æ–Ω—Ç–∞–∫—Ç—ã
          </h2>
          <div className="grid md:grid-cols-2 gap-12">
            <div className="space-y-8">
              <Card className="p-6 border-2 border-primary/20">
                <h3 className="text-xl font-bold text-secondary mb-4 flex items-center gap-2">
                  <Icon name="MapPin" size={24} className="text-primary" />
                  –ê–¥—Ä–µ—Å –æ—Ñ–∏—Å–∞
                </h3>
                <p className="text-muted-foreground leading-relaxed mb-4">
                  –≥. –ú–æ—Å–∫–≤–∞, —É–ª. –ö—Ä–∞—Å–Ω–æ–∫–∞–∑–∞—Ä–º–µ–Ω–Ω–∞—è 14,<br />
                  –ë–¶ ¬´–û–º–µ–≥–∞¬ª, –æ—Ñ–∏—Å 41
                </p>
                <div className="bg-blue-50 p-4 rounded-lg">
                  <div className="font-semibold text-secondary mb-2 flex items-center gap-2">
                    <Icon name="Navigation" size={16} className="text-primary" />
                    –ö–∞–∫ –ø—Ä–æ–µ—Ö–∞—Ç—å
                  </div>
                  <p className="text-sm text-muted-foreground leading-relaxed">
                    –°—Ç–∞–Ω—Ü–∏—è –º–µ—Ç—Ä–æ ¬´–ê–≤–∏–∞–º–æ—Ç–æ—Ä–Ω–∞—è¬ª<br />
                    –í—ã—Ö–æ–¥ –≤ –≥–æ—Ä–æ–¥ –Ω–∞ –ø—Ä. –î–∑–µ—Ä–∂–∏–Ω—Å–∫–æ–≥–æ, –∏–∑ –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞–ø—Ä–∞–≤–æ –¥–æ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∞–≤—Ç–æ–±—É—Å–∞ ¬´–ü–ö–∏–û –ë–µ—Ä–µ–∑–æ–≤–∞—è —Ä–æ—â–∞¬ª
                  </p>
                </div>
              </Card>

              <Card className="p-6 border-2 border-primary/20">
                <h3 className="text-xl font-bold text-secondary mb-4 flex items-center gap-2">
                  <Icon name="Clock" size={24} className="text-primary" />
                  –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã
                </h3>
                <div className="space-y-2">
                  <p className="text-muted-foreground flex justify-between">
                    <span>–ü–Ω-–ü—Ç:</span>
                    <span className="font-semibold text-secondary">10:00-19:00</span>
                  </p>
                  <p className="text-muted-foreground flex justify-between">
                    <span>–°–±-–í—Å:</span>
                    <span className="font-semibold text-secondary">–≤—ã—Ö–æ–¥–Ω–æ–π</span>
                  </p>
                </div>
              </Card>

              <Card className="p-6 border-2 border-primary/20">
                <h3 className="text-xl font-bold text-secondary mb-4 flex items-center gap-2">
                  <Icon name="Phone" size={24} className="text-primary" />
                  –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏
                </h3>
                <a href="tel:88001017139" className="text-primary hover:underline text-xl font-bold block mb-3 flex items-center gap-2">
                  <Icon name="Phone" size={20} />
                  8 (800) 101-71-39
                </a>
                <a href="mailto:support@silvla-ai.ru" className="text-primary hover:underline block mb-4 flex items-center gap-2">
                  <Icon name="Mail" size={18} />
                  support@silvla-ai.ru
                </a>
                <div className="flex gap-3 mt-4">
                  <a href="https://t.me/yourusername" target="_blank" rel="noopener noreferrer" className="w-11 h-11 bg-gradient-to-br from-primary to-secondary rounded-full flex items-center justify-center hover:shadow-lg transition-shadow" title="Telegram">
                    <Icon name="Send" size={20} className="text-white" />
                  </a>
                  <a href="https://vk.com/yourusername" target="_blank" rel="noopener noreferrer" className="w-11 h-11 bg-gradient-to-br from-primary to-secondary rounded-full flex items-center justify-center hover:shadow-lg transition-shadow" title="VK">
                    <Icon name="MessageCircle" size={20} className="text-white" />
                  </a>
                </div>
              </Card>
            </div>

            <Card id="contact-form" className="p-8 border-2 border-primary/20 h-fit">
              <h3 className="text-2xl font-bold text-secondary mb-2">–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É</h3>
              <p className="text-muted-foreground mb-6">–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É, –∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ —á–∞—Å–∞</p>
              <form onSubmit={handleSubmit} className="space-y-4">
                <div>
                  <label className="text-sm font-medium text-secondary mb-1 block">–í–∞—à–µ –∏–º—è *</label>
                  <Input
                    placeholder="–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤"
                    value={formData.name}
                    onChange={(e) => setFormData({ ...formData, name: e.target.value })}
                    required
                  />
                </div>
                <div>
                  <label className="text-sm font-medium text-secondary mb-1 block">Email *</label>
                  <Input
                    type="email"
                    placeholder="ivan@company.ru"
                    value={formData.email}
                    onChange={(e) => setFormData({ ...formData, email: e.target.value })}
                    required
                  />
                </div>
                <div>
                  <label className="text-sm font-medium text-secondary mb-1 block">–¢–µ–ª–µ—Ñ–æ–Ω *</label>
                  <Input
                    type="tel"
                    placeholder="+7 (999) 123-45-67"
                    value={formData.phone}
                    onChange={(e) => setFormData({ ...formData, phone: e.target.value })}
                    required
                  />
                </div>
                <div>
                  <label className="text-sm font-medium text-secondary mb-1 block">–û–ø–∏—à–∏—Ç–µ –≤–∞—à—É –∑–∞–¥–∞—á—É</label>
                  <Textarea
                    placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, –∫–∞–∫–æ–π –ø—Ä–æ—Ü–µ—Å—Å –≤—ã —Ö–æ—Ç–∏—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å..."
                    value={formData.message}
                    onChange={(e) => setFormData({ ...formData, message: e.target.value })}
                    rows={4}
                    required
                  />
                </div>
                <Button type="submit" className="w-full" size="lg">
                  <Icon name="Send" size={20} className="mr-2" />
                  –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
                </Button>
                <p className="text-xs text-muted-foreground text-center">
                  –ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
                </p>
              </form>
            </Card>
          </div>
        </div>
      </section>

      <footer className="bg-gradient-to-br from-secondary to-gray-900 text-white py-12 px-4">
        <div className="container mx-auto max-w-6xl">
          <div className="grid md:grid-cols-4 gap-8 mb-8">
            <div>
              <div className="flex items-center gap-2 mb-4">
                <div className="w-10 h-10 bg-gradient-to-br from-primary to-white/20 rounded-lg flex items-center justify-center">
                  <Icon name="Sparkles" size={24} className="text-white" />
                </div>
                <div className="text-2xl font-bold">SILVIA AI</div>
              </div>
              <p className="text-white/70 text-sm leading-relaxed">
                –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤ —Å –ø–æ–º–æ—â—å—é AI-—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –Ω–æ–≤–æ–≥–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è
              </p>
            </div>
            <div>
              <h4 className="font-bold mb-4 text-lg">–£—Å–ª—É–≥–∏</h4>
              <div className="space-y-2 text-sm">
                <a href="#services" className="block text-white/70 hover:text-white transition-colors">–¶–∏—Ñ—Ä–æ–≤—ã–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏</a>
                <a href="#services" className="block text-white/70 hover:text-white transition-colors">–ì–æ–ª–æ—Å–æ–≤—ã–µ –ø–æ–º–æ—â–Ω–∏–∫–∏</a>
                <a href="#services" className="block text-white/70 hover:text-white transition-colors">–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º</a>
                <a href="#services" className="block text-white/70 hover:text-white transition-colors">–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏</a>
              </div>
            </div>
            <div>
              <h4 className="font-bold mb-4 text-lg">–ù–∞–≤–∏–≥–∞—Ü–∏—è</h4>
              <div className="space-y-2 text-sm">
                <a href="#demo" className="block text-white/70 hover:text-white transition-colors">–î–µ–º–æ</a>
                <a href="#examples" className="block text-white/70 hover:text-white transition-colors">–ö–µ–π—Å—ã</a>
                <a href="#benefits" className="block text-white/70 hover:text-white transition-colors">–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞</a>
                <a href="#contacts" className="block text-white/70 hover:text-white transition-colors">–ö–æ–Ω—Ç–∞–∫—Ç—ã</a>
              </div>
            </div>
            <div>
              <h4 className="font-bold mb-4 text-lg">–ö–æ–Ω—Ç–∞–∫—Ç—ã</h4>
              <div className="space-y-2 text-sm text-white/70">
                <p className="flex items-center gap-2">
                  <Icon name="Phone" size={16} />
                  8 (800) 101-71-39
                </p>
                <p className="flex items-center gap-2">
                  <Icon name="Mail" size={16} />
                  support@silvla-ai.ru
                </p>
                <p className="flex items-center gap-2">
                  <Icon name="Clock" size={16} />
                  –ü–Ω-–ü—Ç: 10:00-19:00
                </p>
              </div>
            </div>
          </div>
          <div className="border-t border-white/20 pt-8 flex flex-col md:flex-row justify-between items-center gap-4">
            <p className="text-sm text-white/70 text-center md:text-left">
              &copy; {new Date().getFullYear()} SILVIA AI. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.
            </p>
            <div className="flex gap-4 text-sm text-white/70">
              <a href="#" className="hover:text-white transition-colors">–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</a>
              <a href="#" className="hover:text-white transition-colors">–î–æ–≥–æ–≤–æ—Ä –æ—Ñ–µ—Ä—Ç—ã</a>
            </div>
          </div>
        </div>
      </footer>
    </div>
  );
}
